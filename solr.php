<?php 
/**
 * @method __construct()
 * @method __destruct()
 * @method offsetSet($property_name, $property_value)
 * @method offsetGet($property_name)
 * @method offsetExists($property_name)
 * @method offsetUnset($property_name)
 * @method getPropertyNames()
 */
class SolrObject implements ArrayAccess {}

/**
 * @method __construct()
 * @method __destruct()
 * @method __clone()
 * @method __set($fieldName, $fieldValue)
 * @method __get($fieldName)
 * @method __isset($fieldName)
 * @method __unset($fieldName)
 * @method offsetSet($fieldName, $fieldValue)
 * @method offsetGet($fieldName)
 * @method offsetExists($fieldName)
 * @method offsetUnset($fieldName)
 * @method current()
 * @method key()
 * @method next()
 * @method rewind()
 * @method valid()
 * @method serialize()
 * @method unserialize($serialized)
 * @method clear()
 * @method reset()
 * @method addField($fieldName, $fieldValue)
 * @method getFieldNames()
 * @method getFieldCount()
 * @method getField($fieldName)
 * @method toArray()
 * @method fieldExists($fieldName)
 * @method deleteField($fieldName)
 * @method sort($sortOrderBy, $sortDirection)
 * @method merge($sourceDoc, $overwrite)
 * @method getInputDocument()
 * @method getChildDocumentsCount()
 * @method hasChildDocuments()
 * @method getChildDocuments()
 */
class SolrDocument implements ArrayAccess,Iterator,Traversable,Serializable {}

/**
 * @method __construct()
 * @method __destruct()
 */
class SolrDocumentField {}

/**
 * @method __construct()
 * @method __destruct()
 * @method __clone()
 * @method __sleep()
 * @method __wakeup()
 * @method setBoost($documentBoostValue)
 * @method getBoost()
 * @method clear()
 * @method reset()
 * @method addField($fieldName, $fieldValue, $fieldBoostValue)
 * @method getFieldBoost($fieldName)
 * @method setFieldBoost($fieldName, $fieldBoostValue)
 * @method getFieldNames()
 * @method getFieldCount()
 * @method getField($fieldName)
 * @method toArray()
 * @method fieldExists($fieldName)
 * @method deleteField($fieldName)
 * @method sort($sortOrderBy, $sortDirection)
 * @method merge($sourceDoc, $overwrite)
 * @method addChildDocument($child)
 * @method getChildDocuments()
 * @method hasChildDocuments()
 * @method getChildDocumentsCount()
 * @method addChildDocuments($docs)
 */
class SolrInputDocument {}

/**
 * @method __construct($clientOptions)
 * @method __destruct()
 * @method __sleep()
 * @method __wakeup()
 * @method __clone()
 * @method getOptions()
 * @method getDebug()
 * @method setServlet($type, $value)
 * @method query($query)
 * @method addDocument($doc, $overwrite, $commitWithin)
 * @method addDocuments($docs, $overwrite, $commitWithin)
 * @method request($raw_request)
 * @method setResponseWriter($responseWriter)
 * @method deleteById($id)
 * @method deleteByIds($ids)
 * @method deleteByQuery($query)
 * @method deleteByQueries($queries)
 * @method getById($id)
 * @method getByIds($ids)
 * @method commit($softCommit, $waitSearcher, $expungeDeletes)
 * @method optimize($maxSegments, $softCommit, $waitSearcher)
 * @method rollback()
 * @method ping()
 * @method system()
 * @method threads()
 */
class SolrClient {}

/**
 * @method setParam($name, $value)
 * @method addParam($name, $value)
 * @method __toString()
 * @method toString($url_encode)
 * @method getParams()
 * @method getParam($param_name)
 * @method getPreparedParams()
 * @method __clone()
 * @method serialize()
 * @method unserialize($serialized)
 * @method add($name, $value)
 * @method set($name, $value)
 * @method get($param_name)
 */
class SolrParams implements Serializable {}

/**
 * @method __construct()
 * @method __destruct()
 * @method setParam($name, $value)
 * @method addParam($name, $value)
 * @method __toString()
 * @method toString($url_encode)
 * @method getParams()
 * @method getParam($param_name)
 * @method getPreparedParams()
 * @method __clone()
 * @method serialize()
 * @method unserialize($serialized)
 * @method add($name, $value)
 * @method set($name, $value)
 * @method get($param_name)
 */
class SolrModifiableParams extends SolrParams implements Serializable {}

/**
 * @method __construct($q)
 * @method __destruct()
 * @method setQuery($q)
 * @method getQuery()
 * @method setStart($start)
 * @method getStart()
 * @method setRows($rows)
 * @method getRows()
 * @method addField($field)
 * @method removeField($field)
 * @method getFields()
 * @method addSortField($field, $order)
 * @method removeSortField($field)
 * @method getSortFields()
 * @method addFilterQuery($fq)
 * @method removeFilterQuery($fq)
 * @method getFilterQueries()
 * @method setShowDebugInfo($flag)
 * @method setExplainOther($flag)
 * @method setTimeAllowed($timeAllowed)
 * @method getTimeAllowed()
 * @method setOmitHeader($flag)
 * @method setEchoHandler($flag)
 * @method setEchoParams($type)
 * @method setFacet($value)
 * @method getFacet()
 * @method addFacetField($value)
 * @method removeFacetField($value)
 * @method getFacetFields()
 * @method addFacetQuery($value)
 * @method removeFacetQuery($value)
 * @method getFacetQueries()
 * @method setFacetPrefix($value, $field_override)
 * @method getFacetPrefix($field_override)
 * @method setFacetSort($value, $field_override)
 * @method getFacetSort($field_override)
 * @method setFacetLimit($value, $field_override)
 * @method getFacetLimit($field_override)
 * @method setFacetOffset($value, $field_override)
 * @method getFacetOffset($field_override)
 * @method setFacetMinCount($value, $field_override)
 * @method getFacetMinCount($field_override)
 * @method setFacetMissing($value, $field_override)
 * @method getFacetMissing($field_override)
 * @method setFacetMethod($value, $field_override)
 * @method getFacetMethod($field_override)
 * @method setFacetEnumCacheMinDefaultFrequency($value, $field_override)
 * @method addFacetDateField($value)
 * @method removeFacetDateField($value)
 * @method getFacetDateFields()
 * @method setFacetDateStart($value, $field_override)
 * @method getFacetDateStart($field_override)
 * @method setFacetDateEnd($value, $field_override)
 * @method getFacetDateEnd($field_override)
 * @method setFacetDateGap($value, $field_override)
 * @method getFacetDateGap($field_override)
 * @method setFacetDateHardEnd($value, $field_override)
 * @method getFacetDateHardEnd($field_override)
 * @method addFacetDateOther($value, $field_override)
 * @method removeFacetDateOther($value, $field_override)
 * @method getFacetDateOther($field_override)
 * @method setGroup($value)
 * @method getGroup()
 * @method addGroupField($value)
 * @method getGroupFields()
 * @method addGroupFunction($value)
 * @method getGroupFunctions()
 * @method addGroupQuery($value)
 * @method getGroupQueries()
 * @method setGroupLimit($value)
 * @method getGroupLimit()
 * @method setGroupOffset($value)
 * @method getGroupOffset()
 * @method addGroupSortField($field, $order)
 * @method getGroupSortFields()
 * @method setGroupFormat($value)
 * @method getGroupFormat()
 * @method setGroupMain($value)
 * @method getGroupMain()
 * @method setGroupNGroups($value)
 * @method getGroupNGroups()
 * @method setGroupTruncate($value)
 * @method getGroupTruncate()
 * @method setGroupFacet($value)
 * @method getGroupFacet()
 * @method setGroupCachePercent($percent)
 * @method getGroupCachePercent()
 * @method collapse($collapseFunction)
 * @method setExpand($value)
 * @method getExpand()
 * @method addExpandSortField($field, $order)
 * @method removeExpandSortField($field)
 * @method getExpandSortFields()
 * @method setExpandRows($value)
 * @method getExpandRows()
 * @method setExpandQuery($q)
 * @method getExpandQuery()
 * @method addExpandFilterQuery($fq)
 * @method removeExpandFilterQuery($fq)
 * @method getExpandFilterQueries()
 * @method setHighlight($value)
 * @method getHighlight()
 * @method addHighlightField($value)
 * @method removeHighlightField($value)
 * @method getHighlightFields()
 * @method setHighlightSnippets($value, $field_override)
 * @method getHighlightSnippets($field_override)
 * @method setHighlightFragsize($value, $field_override)
 * @method getHighlightFragsize($field_override)
 * @method setHighlightMergeContiguous($value, $field_override)
 * @method getHighlightMergeContiguous($field_override)
 * @method setHighlightRequireFieldMatch($value)
 * @method getHighlightRequireFieldMatch()
 * @method setHighlightMaxAnalyzedChars($value)
 * @method getHighlightMaxAnalyzedChars()
 * @method setHighlightAlternateField($value, $field_override)
 * @method getHighlightAlternateField($field_override)
 * @method setHighlightMaxAlternateFieldLength($value, $field_override)
 * @method getHighlightMaxAlternateFieldLength($field_override)
 * @method setHighlightFormatter($value, $field_override)
 * @method getHighlightFormatter($field_override)
 * @method setHighlightSimplePre($value, $field_override)
 * @method getHighlightSimplePre($field_override)
 * @method setHighlightSimplePost($value, $field_override)
 * @method getHighlightSimplePost($field_override)
 * @method setHighlightFragmenter($value, $field_override)
 * @method getHighlightFragmenter($field_override)
 * @method setHighlightUsePhraseHighlighter($value)
 * @method getHighlightUsePhraseHighlighter()
 * @method setHighlightHighlightMultiTerm($value)
 * @method getHighlightHighlightMultiTerm()
 * @method setHighlightRegexSlop($value)
 * @method getHighlightRegexSlop()
 * @method setHighlightRegexPattern($value)
 * @method getHighlightRegexPattern()
 * @method setHighlightRegexMaxAnalyzedChars($value)
 * @method getHighlightRegexMaxAnalyzedChars()
 * @method setStats($value)
 * @method getStats()
 * @method addStatsField($value)
 * @method removeStatsField($value)
 * @method getStatsFields()
 * @method addStatsFacet($value)
 * @method removeStatsFacet($value)
 * @method getStatsFacets()
 * @method setMlt($value)
 * @method getMlt()
 * @method setMltCount($value)
 * @method getMltCount()
 * @method addMltField($value)
 * @method removeMltField($value)
 * @method getMltFields()
 * @method addMltQueryField($field, $boost)
 * @method removeMltQueryField($value)
 * @method getMltQueryFields()
 * @method setMltMinTermFrequency($value)
 * @method getMltMinTermFrequency()
 * @method setMltMinDocFrequency($value)
 * @method getMltMinDocFrequency()
 * @method setMltMinWordLength($value)
 * @method getMltMinWordLength()
 * @method setMltMaxWordLength($value)
 * @method getMltMaxWordLength()
 * @method setMltMaxNumTokens($value)
 * @method getMltMaxNumTokens()
 * @method setMltMaxNumQueryTerms($value)
 * @method getMltMaxNumQueryTerms()
 * @method setMltBoost($value)
 * @method getMltBoost()
 * @method setTerms($value)
 * @method getTerms()
 * @method setTermsField($value)
 * @method getTermsField()
 * @method setTermsLowerBound($value)
 * @method getTermsLowerBound()
 * @method setTermsUpperBound($value)
 * @method getTermsUpperBound()
 * @method setTermsIncludeLowerBound($value)
 * @method getTermsIncludeLowerBound()
 * @method setTermsIncludeUpperBound($value)
 * @method getTermsIncludeUpperBound()
 * @method setTermsMinCount($value)
 * @method getTermsMinCount()
 * @method setTermsMaxCount($value)
 * @method getTermsMaxCount()
 * @method setTermsPrefix($value)
 * @method getTermsPrefix()
 * @method setTermsLimit($value)
 * @method getTermsLimit()
 * @method setTermsReturnRaw($value)
 * @method getTermsReturnRaw()
 * @method setTermsSort($value)
 * @method getTermsSort()
 * @method setParam($name, $value)
 * @method addParam($name, $value)
 * @method __toString()
 * @method toString($url_encode)
 * @method getParams()
 * @method getParam($param_name)
 * @method getPreparedParams()
 * @method __clone()
 * @method serialize()
 * @method unserialize($serialized)
 * @method add($name, $value)
 * @method set($name, $value)
 * @method get($param_name)
 */
class SolrQuery extends SolrModifiableParams implements Serializable {}

/**
 * @method __construct($q)
 * @method setQueryAlt($q)
 * @method addQueryField($field, $boost)
 * @method removeQueryField($field)
 * @method addPhraseField($field, $boost, $slop)
 * @method removePhraseField($field)
 * @method setPhraseFields($fields)
 * @method setPhraseSlop($slop)
 * @method setQueryPhraseSlop($slop)
 * @method setBoostQuery($q)
 * @method addBoostQuery($field, $value, $boost)
 * @method removeBoostQuery($field)
 * @method setBoostFunction($function)
 * @method setMinimumMatch($value)
 * @method setTieBreaker($tieBreaker)
 * @method useDisMaxQueryParser()
 * @method useEDisMaxQueryParser()
 * @method setBigramPhraseFields($fields)
 * @method addBigramPhraseField($field, $boost, $slop)
 * @method removeBigramPhraseField($field)
 * @method setBigramPhraseSlop($slop)
 * @method setTrigramPhraseFields($fields)
 * @method addTrigramPhraseField($field, $boost, $slop)
 * @method removeTrigramPhraseField($field)
 * @method setTrigramPhraseSlop($slop)
 * @method addUserField($field)
 * @method removeUserField($field)
 * @method setUserFields($fields)
 * @method __destruct()
 * @method setQuery($q)
 * @method getQuery()
 * @method setStart($start)
 * @method getStart()
 * @method setRows($rows)
 * @method getRows()
 * @method addField($field)
 * @method removeField($field)
 * @method getFields()
 * @method addSortField($field, $order)
 * @method removeSortField($field)
 * @method getSortFields()
 * @method addFilterQuery($fq)
 * @method removeFilterQuery($fq)
 * @method getFilterQueries()
 * @method setShowDebugInfo($flag)
 * @method setExplainOther($flag)
 * @method setTimeAllowed($timeAllowed)
 * @method getTimeAllowed()
 * @method setOmitHeader($flag)
 * @method setEchoHandler($flag)
 * @method setEchoParams($type)
 * @method setFacet($value)
 * @method getFacet()
 * @method addFacetField($value)
 * @method removeFacetField($value)
 * @method getFacetFields()
 * @method addFacetQuery($value)
 * @method removeFacetQuery($value)
 * @method getFacetQueries()
 * @method setFacetPrefix($value, $field_override)
 * @method getFacetPrefix($field_override)
 * @method setFacetSort($value, $field_override)
 * @method getFacetSort($field_override)
 * @method setFacetLimit($value, $field_override)
 * @method getFacetLimit($field_override)
 * @method setFacetOffset($value, $field_override)
 * @method getFacetOffset($field_override)
 * @method setFacetMinCount($value, $field_override)
 * @method getFacetMinCount($field_override)
 * @method setFacetMissing($value, $field_override)
 * @method getFacetMissing($field_override)
 * @method setFacetMethod($value, $field_override)
 * @method getFacetMethod($field_override)
 * @method setFacetEnumCacheMinDefaultFrequency($value, $field_override)
 * @method addFacetDateField($value)
 * @method removeFacetDateField($value)
 * @method getFacetDateFields()
 * @method setFacetDateStart($value, $field_override)
 * @method getFacetDateStart($field_override)
 * @method setFacetDateEnd($value, $field_override)
 * @method getFacetDateEnd($field_override)
 * @method setFacetDateGap($value, $field_override)
 * @method getFacetDateGap($field_override)
 * @method setFacetDateHardEnd($value, $field_override)
 * @method getFacetDateHardEnd($field_override)
 * @method addFacetDateOther($value, $field_override)
 * @method removeFacetDateOther($value, $field_override)
 * @method getFacetDateOther($field_override)
 * @method setGroup($value)
 * @method getGroup()
 * @method addGroupField($value)
 * @method getGroupFields()
 * @method addGroupFunction($value)
 * @method getGroupFunctions()
 * @method addGroupQuery($value)
 * @method getGroupQueries()
 * @method setGroupLimit($value)
 * @method getGroupLimit()
 * @method setGroupOffset($value)
 * @method getGroupOffset()
 * @method addGroupSortField($field, $order)
 * @method getGroupSortFields()
 * @method setGroupFormat($value)
 * @method getGroupFormat()
 * @method setGroupMain($value)
 * @method getGroupMain()
 * @method setGroupNGroups($value)
 * @method getGroupNGroups()
 * @method setGroupTruncate($value)
 * @method getGroupTruncate()
 * @method setGroupFacet($value)
 * @method getGroupFacet()
 * @method setGroupCachePercent($percent)
 * @method getGroupCachePercent()
 * @method collapse($collapseFunction)
 * @method setExpand($value)
 * @method getExpand()
 * @method addExpandSortField($field, $order)
 * @method removeExpandSortField($field)
 * @method getExpandSortFields()
 * @method setExpandRows($value)
 * @method getExpandRows()
 * @method setExpandQuery($q)
 * @method getExpandQuery()
 * @method addExpandFilterQuery($fq)
 * @method removeExpandFilterQuery($fq)
 * @method getExpandFilterQueries()
 * @method setHighlight($value)
 * @method getHighlight()
 * @method addHighlightField($value)
 * @method removeHighlightField($value)
 * @method getHighlightFields()
 * @method setHighlightSnippets($value, $field_override)
 * @method getHighlightSnippets($field_override)
 * @method setHighlightFragsize($value, $field_override)
 * @method getHighlightFragsize($field_override)
 * @method setHighlightMergeContiguous($value, $field_override)
 * @method getHighlightMergeContiguous($field_override)
 * @method setHighlightRequireFieldMatch($value)
 * @method getHighlightRequireFieldMatch()
 * @method setHighlightMaxAnalyzedChars($value)
 * @method getHighlightMaxAnalyzedChars()
 * @method setHighlightAlternateField($value, $field_override)
 * @method getHighlightAlternateField($field_override)
 * @method setHighlightMaxAlternateFieldLength($value, $field_override)
 * @method getHighlightMaxAlternateFieldLength($field_override)
 * @method setHighlightFormatter($value, $field_override)
 * @method getHighlightFormatter($field_override)
 * @method setHighlightSimplePre($value, $field_override)
 * @method getHighlightSimplePre($field_override)
 * @method setHighlightSimplePost($value, $field_override)
 * @method getHighlightSimplePost($field_override)
 * @method setHighlightFragmenter($value, $field_override)
 * @method getHighlightFragmenter($field_override)
 * @method setHighlightUsePhraseHighlighter($value)
 * @method getHighlightUsePhraseHighlighter()
 * @method setHighlightHighlightMultiTerm($value)
 * @method getHighlightHighlightMultiTerm()
 * @method setHighlightRegexSlop($value)
 * @method getHighlightRegexSlop()
 * @method setHighlightRegexPattern($value)
 * @method getHighlightRegexPattern()
 * @method setHighlightRegexMaxAnalyzedChars($value)
 * @method getHighlightRegexMaxAnalyzedChars()
 * @method setStats($value)
 * @method getStats()
 * @method addStatsField($value)
 * @method removeStatsField($value)
 * @method getStatsFields()
 * @method addStatsFacet($value)
 * @method removeStatsFacet($value)
 * @method getStatsFacets()
 * @method setMlt($value)
 * @method getMlt()
 * @method setMltCount($value)
 * @method getMltCount()
 * @method addMltField($value)
 * @method removeMltField($value)
 * @method getMltFields()
 * @method addMltQueryField($field, $boost)
 * @method removeMltQueryField($value)
 * @method getMltQueryFields()
 * @method setMltMinTermFrequency($value)
 * @method getMltMinTermFrequency()
 * @method setMltMinDocFrequency($value)
 * @method getMltMinDocFrequency()
 * @method setMltMinWordLength($value)
 * @method getMltMinWordLength()
 * @method setMltMaxWordLength($value)
 * @method getMltMaxWordLength()
 * @method setMltMaxNumTokens($value)
 * @method getMltMaxNumTokens()
 * @method setMltMaxNumQueryTerms($value)
 * @method getMltMaxNumQueryTerms()
 * @method setMltBoost($value)
 * @method getMltBoost()
 * @method setTerms($value)
 * @method getTerms()
 * @method setTermsField($value)
 * @method getTermsField()
 * @method setTermsLowerBound($value)
 * @method getTermsLowerBound()
 * @method setTermsUpperBound($value)
 * @method getTermsUpperBound()
 * @method setTermsIncludeLowerBound($value)
 * @method getTermsIncludeLowerBound()
 * @method setTermsIncludeUpperBound($value)
 * @method getTermsIncludeUpperBound()
 * @method setTermsMinCount($value)
 * @method getTermsMinCount()
 * @method setTermsMaxCount($value)
 * @method getTermsMaxCount()
 * @method setTermsPrefix($value)
 * @method getTermsPrefix()
 * @method setTermsLimit($value)
 * @method getTermsLimit()
 * @method setTermsReturnRaw($value)
 * @method getTermsReturnRaw()
 * @method setTermsSort($value)
 * @method getTermsSort()
 * @method setParam($name, $value)
 * @method addParam($name, $value)
 * @method __toString()
 * @method toString($url_encode)
 * @method getParams()
 * @method getParam($param_name)
 * @method getPreparedParams()
 * @method __clone()
 * @method serialize()
 * @method unserialize($serialized)
 * @method add($name, $value)
 * @method set($name, $value)
 * @method get($param_name)
 */
class SolrDisMaxQuery extends SolrQuery implements Serializable {}

/**
 * @method __construct($field)
 * @method __destruct()
 * @method setField($field)
 * @method getField()
 * @method setMax($max)
 * @method getMax()
 * @method setMin($min)
 * @method getMin()
 * @method setSize($size)
 * @method getSize()
 * @method setHint($hint)
 * @method getHint()
 * @method setNullPolicy($policy)
 * @method getNullPolicy()
 * @method __toString()
 * @method __sleep()
 * @method __wakeup()
 */
class SolrCollapseFunction {}

/**
 * @method getHttpStatus()
 * @method getHttpStatusMessage()
 * @method success()
 * @method getRequestUrl()
 * @method getRawRequestHeaders()
 * @method getRawRequest()
 * @method getRawResponseHeaders()
 * @method getRawResponse()
 * @method getDigestedResponse()
 * @method setParseMode($parser_mode)
 * @method getResponse()
 * @method getArrayResponse()
 */
class SolrResponse {}

/**
 * @method __construct()
 * @method __destruct()
 * @method getHttpStatus()
 * @method getHttpStatusMessage()
 * @method success()
 * @method getRequestUrl()
 * @method getRawRequestHeaders()
 * @method getRawRequest()
 * @method getRawResponseHeaders()
 * @method getRawResponse()
 * @method getDigestedResponse()
 * @method setParseMode($parser_mode)
 * @method getResponse()
 * @method getArrayResponse()
 */
class SolrQueryResponse extends SolrResponse {}

/**
 * @method __construct()
 * @method __destruct()
 * @method getHttpStatus()
 * @method getHttpStatusMessage()
 * @method success()
 * @method getRequestUrl()
 * @method getRawRequestHeaders()
 * @method getRawRequest()
 * @method getRawResponseHeaders()
 * @method getRawResponse()
 * @method getDigestedResponse()
 * @method setParseMode($parser_mode)
 * @method getResponse()
 * @method getArrayResponse()
 */
class SolrUpdateResponse extends SolrResponse {}

/**
 * @method __construct()
 * @method __destruct()
 * @method getResponse()
 * @method getHttpStatus()
 * @method getHttpStatusMessage()
 * @method success()
 * @method getRequestUrl()
 * @method getRawRequestHeaders()
 * @method getRawRequest()
 * @method getRawResponseHeaders()
 * @method getRawResponse()
 * @method getDigestedResponse()
 * @method setParseMode($parser_mode)
 * @method getArrayResponse()
 */
class SolrPingResponse extends SolrResponse {}

/**
 * @method __construct()
 * @method __destruct()
 * @method getHttpStatus()
 * @method getHttpStatusMessage()
 * @method success()
 * @method getRequestUrl()
 * @method getRawRequestHeaders()
 * @method getRawRequest()
 * @method getRawResponseHeaders()
 * @method getRawResponse()
 * @method getDigestedResponse()
 * @method setParseMode($parser_mode)
 * @method getResponse()
 * @method getArrayResponse()
 */
class SolrGenericResponse extends SolrResponse {}

/**
 * @method escapeQueryChars($str)
 * @method queryPhrase($str)
 * @method digestXmlResponse($xmlresponse, $parse_mode)
 * @method digestJsonResponse($jsonResponse)
 * @method getSolrVersion()
 */
class SolrUtils {}

/**
 * @method getInternalInfo()
 * @method __construct($message, $code, $previous)
 * @method __wakeup()
 * @method getMessage()
 * @method getCode()
 * @method getFile()
 * @method getLine()
 * @method getTrace()
 * @method getPrevious()
 * @method getTraceAsString()
 * @method __toString()
 */
class SolrException extends Exception {}

/**
 * @method getInternalInfo()
 * @method __construct($message, $code, $previous)
 * @method __wakeup()
 * @method getMessage()
 * @method getCode()
 * @method getFile()
 * @method getLine()
 * @method getTrace()
 * @method getPrevious()
 * @method getTraceAsString()
 * @method __toString()
 */
class SolrIllegalOperationException extends SolrException {}

/**
 * @method getInternalInfo()
 * @method __construct($message, $code, $previous)
 * @method __wakeup()
 * @method getMessage()
 * @method getCode()
 * @method getFile()
 * @method getLine()
 * @method getTrace()
 * @method getPrevious()
 * @method getTraceAsString()
 * @method __toString()
 */
class SolrIllegalArgumentException extends SolrException {}

/**
 * @method getInternalInfo()
 * @method __construct($message, $code, $previous)
 * @method __wakeup()
 * @method getMessage()
 * @method getCode()
 * @method getFile()
 * @method getLine()
 * @method getTrace()
 * @method getPrevious()
 * @method getTraceAsString()
 * @method __toString()
 */
class SolrClientException extends SolrException {}

/**
 * @method getInternalInfo()
 * @method __construct($message, $code, $previous)
 * @method __wakeup()
 * @method getMessage()
 * @method getCode()
 * @method getFile()
 * @method getLine()
 * @method getTrace()
 * @method getPrevious()
 * @method getTraceAsString()
 * @method __toString()
 */
class SolrServerException extends SolrException {}

/**
 * @method getInternalInfo()
 * @method __construct($message, $code, $previous)
 * @method __wakeup()
 * @method getMessage()
 * @method getCode()
 * @method getFile()
 * @method getLine()
 * @method getTrace()
 * @method getPrevious()
 * @method getTraceAsString()
 * @method __toString()
 */
class SolrMissingMandatoryParameterException extends SolrException {}

